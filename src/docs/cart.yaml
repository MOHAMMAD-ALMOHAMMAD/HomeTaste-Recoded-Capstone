paths:
  /api/cart:
    get:
      tags:
        - Cart
      summary: Gets A User's Cart
      responses:
        200:
          description: Gets A User's Cart Based On Thier User ID
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Cart'
        404:
          description: User's Cart Not Found 
  
    post:
      tags:
        - Cart
      summary: Add a dish to the user's cart
      description: |
        Adds a dish to the user's cart. The user must be authenticated with a JWT token.
      produces:
        - application/json
      parameters:
        - name: dishId
          in: query
          description: The ID of the dish to be added to the cart
          required: true
          type: string
      security:
        - cookieAuth: []
      responses:
        200:
          description: Dish successfully added to the cart
          schema:
            type: object
            properties:
              message:
                type: string
                description: A success message
        401:
          description: Unauthorized - JWT token not provided or invalid
          schema:
            type: object
            properties:
              message:
                type: string
                description: An error message
        404:
          description: Not Found - The dish or user cart was not found
          schema:
            type: object
            properties:
              message:
                type: string
                description: An error message
  /api/cart/deleteAll:
    get:
      tags:
        - Cart
      summary: Delete All Items In A User's Cart
      security:
        - cookieAuth: []
      responses:
        200:
          description: All Items In The Cart Have Been Succesfully Removed
          content:
            application/json: 
              schema:
                 type: object
                 properties:
                   message:
                     type: string
                     description: A success message
        500:
          description: For Any Other Kind Of Error
  

components:
  securitySchemas:
    cookieAuth:
      type: apiKey
      name: authTokenCompleted
      in: cookie
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
          example: 63b2af3ea060d606a4409682
        totalPrice:
          type: number
          example: 0
        Items:
          type: Array
          example: []
        user:
          type: string
          example: 64b2af3ea060d606a4409682
paths:
  /api/user/profile:
    get:
      summary: Get user profile
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error

  /api/user/profile/edit:
    patch:
      summary: Update user profile
      tags:
        - User
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserProfile:
      type: object
      properties:
        first_name:
          type: string
          exapmle: 'fatima'
        last_name:
          type: string
          exapmle: 'ali'
        email:
          type: string
          exapmle: 'fatima@gmail.com'
        phone:
          type: string
          exapmle: '+90534000000'
        cooker_status:
          type: string
        address:
          $ref: '#/components/schemas/IAddress'
        profile_image:
          type: string
          example: 'https://res.cloudinary.com/de3x3t4ra/image/upload/v1690389666/user-profile.png'
    IAddress:
      type: object
      properties:
        street_name:
          type: string
          example: Main Street
        street_number:
          type: number
          example: 123
        flat_number:
          type: number
          example: 4
        district:
          type: string
          example: Downtown
        city:
          type: string
          example: New York
        state:
          type: string
          example: NY
        zip:
          type: number
          example: 10001
    UpdateProfile:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        phone:
          type: string
        cooker_status:
          type: string
        street_name:
          type: string
        street_number:
          type: string
        state:
          type: string
        city:
          type: string
        flat_number:
          type: string
        district:
          type: string
        zip:
          type: string
        profile_image:
          type: string
          format: binary
